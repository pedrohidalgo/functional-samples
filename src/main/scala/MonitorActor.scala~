import akka.actor.Actor
import akka.actor.Props
import akka.event.Logging

case class StartMonitorProcess()
case class ProcessHTTPResource()

class MonitorActor(fileName: String) extends Actor {
       private var running = false
   private var totalLines = 0
   private var linesProcessed = 0
   private var result = 0
   private var fileSender: Option[ActorRef] = None

  def receive = {
    case StartMonitorProcess() => {
      if (running) {
        println("Warning: duplicate start message received")
      } else {
        running = true
        fileSender = Some(sender) // save reference to process invoker
        import scala.io.Source._
        fromFile(filename).getLines.foreach { line =>
          context.actorOf(Props[ResourceProcessorActor]) ! ProcessHTTPResource()
          totalLines += 1
        }
      }
    }
    case _ => println("message not recognized!")
  }

}

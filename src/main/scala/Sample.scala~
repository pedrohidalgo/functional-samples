import akka.actor.Actor._
import akka.actor._

object Sample extends App {
 
  import akka.util.Timeout
  import scala.concurrent.duration._
  import akka.pattern.ask
  import akka.dispatch.ExecutionContexts._
  
  implicit val ec = global
  
  override def main(args: Array[String]) {
    val system = ActorSystem("System")
    val filename = "/home/pedro/NetBeansProjects/scala-akka-monitor/src/main/resource/endpoints.txt"
    val actor = system.actorOf(Props(new MonitorActor()))
    implicit val timeout = Timeout(25 seconds)
    val future = actor ? StartMonitorProcess()
    future.map { result =>
      println("Total number of words " + result)
      system.shutdown
    }
  }
}
